# Based on the "trust" template v0.1.1
# https://github.com/japaric/trust/tree/v0.1.1

dist: trusty
language: rust
services: docker
sudo: required

# Rust builds on stable by default, this can be
# overridden on a case by case basis down below.

env:
  global:
    - CRATE_NAME=euclider

matrix:
  # These are all the build jobs. Adjust as necessary. Comment out what you
  # don't need
  include:
    # Linux
    - env: TARGET=x86_64-unknown-linux-gnu
      rust: nightly
    - env: TARGET=x86_64-unknown-linux-musl
      rust: nightly
    - env: TARGET=i686-unknown-linux-gnu
      rust: nightly
    - env: TARGET=i686-unknown-linux-musl
      rust: nightly
    - env: TARGET=aarch64-unknown-linux-gnu
      rust: nightly
    - env: TARGET=arm-unknown-linux-gnueabi
      rust: nightly
    - env: TARGET=armv7-unknown-linux-gnueabihf
      rust: nightly
    - env: TARGET=mips-unknown-linux-gnu
      rust: nightly
    - env: TARGET=mips64-unknown-linux-gnuabi64
      rust: nightly
    - env: TARGET=mips64el-unknown-linux-gnuabi64
      rust: nightly
    - env: TARGET=mipsel-unknown-linux-gnu
      rust: nightly
    - env: TARGET=powerpc-unknown-linux-gnu
      rust: nightly
    - env: TARGET=powerpc64-unknown-linux-gnu
      rust: nightly
    - env: TARGET=powerpc64le-unknown-linux-gnu
      rust: nightly
    - env: TARGET=s390x-unknown-linux-gnu DISABLE_TESTS=1
      rust: nightly

    # OSX
    - env: TARGET=i686-apple-darwin
      os: osx
      rust: nightly
    - env: TARGET=x86_64-apple-darwin
      os: osx
      rust: nightly

    # *BSD
    - env: TARGET=i686-unknown-freebsd DISABLE_TESTS=1
      rust: nightly
    - env: TARGET=x86_64-unknown-freebsd DISABLE_TESTS=1
      rust: nightly
    # Not supported by winit:
    # - env: TARGET=x86_64-unknown-netbsd DISABLE_TESTS=1
    #   rust: nightly

    # Windows
    - env: TARGET=x86_64-pc-windows-gnu
      rust: nightly

    # Bare metal
    # These targets don't support std and as such are likely not suitable for
    # most crates.
    # - env: TARGET=thumbv6m-none-eabi
    # - env: TARGET=thumbv7em-none-eabi
    # - env: TARGET=thumbv7em-none-eabihf
    # - env: TARGET=thumbv7m-none-eabi

before_install:
  - set -e
  - rustup self update

install:
  - sh ci/install.sh
  - source ~/.cargo/env || true

script:
  - bash ci/script.sh

after_script: set +e

before_deploy:
  - sh ci/before_deploy.sh

deploy:
  # update `api_key.secure`
  # - Create a `public_repo` GitHub token. Go to: https://github.com/settings/tokens/new
  # - Encrypt it: `travis encrypt 0123456789012345678901234567890123456789
  # - Paste the output down here
  api_key:
    secure: VIj+kyDQ7WU4EycQ7KjiPEPBWtqDPef6uRC3nZkDkLybkQ+OkuKIRk4HmV6x3b8c1sd4hWWdzueIOAbONcZlxOusupIafhIp8fvUL/sT7k2yjPR1eZ6S/4gFzs1l2z7BSJL+B4fsUjuURC0tYbMmqv61kKS2+OZJsUAY9HMuWPSPC18u4pSugYldDcDCE7zOaKQnt2zSa2aVt8XHf9JBmofjWZwkX2eXhkiOB22fcmGGOsw8288HSIsIjUcndTsCs/6d+NuUN2GKwKi1cLxLw+RPMzLYjrbiYn6y+lCaEfAUu5S2ITGWYVMx/gnWnAQlxbPleKobOjBJhsP8pyIzBQikk1hvgiYqZgdqISn2rBmU0vZO9JXuG6JzxDafEmRHVdMat7LVPMDNF5QdSRMg7SkJ/vrlbB7OLf318e8BJRDVXVcowMxqyy+pVUWWN7HGt8GCuiJhbIpoq7nve3gcsDcLVk9lE66MRngNF8b4INrwLEx3PDZWBhHPy5QVHp1Y7lbcDADmuBrw5twL4XCD4VToi2ze9bYIVGN4+V5iPq3GNkg20h+UNM65zUmwdVFyz+1TMRXE7tCtUi3WXuj+zrQ6RJbp7FzPxkvLl1lEPz9Z4Ziz5T5uTqYNEobvtpMDqxppq3UifpZHsxEVucjBfbhkHa0cHikYARBaURQDhE8=
  file_glob: true
  file: $CRATE_NAME-$TRAVIS_TAG-$TARGET.*
  on:
    # Here you can pick which targets will generate binary releases
    # In this example, there are some targets that are tested using the stable
    # and nightly channels. This condition makes sure there is only one release
    # for such targets and that's generated using the stable channel
    condition: $TRAVIS_RUST_VERSION = nightly
    tags: true
  provider: releases
  skip_cleanup: true

cache: cargo
before_cache:
  # Travis can't cache files that are not readable by "others"
  - chmod -R a+r $HOME/.cargo

branches:
  only:
    # release tags
    - /^v\d+\.\d+\.\d+.*$/
    - master

notifications:
  email:
    on_success: never
